----  * = in progress   x = finished

* - multitest example
* - start docs
  - do a 'stop' before crashing with backtrace?
  - figure out settings and document them
  - more exceptions
  - better handling of curses attrs
  -   maintain my own attr info?
  - fix automated tests
  -   use screen dump (and logging) for automated tests
  -   more automated tests
  - fix menu/selector (no dependency on STDSCR)
  - concept of "current window"? (thread-safe or not?)
  - better debugging
  -   debugging: default log file
  -   more standard debug statements
  -   debugging on/off
  -   debug levels?
  - window positions: accept :top/:bottom/:center, :left/:right/:center
  -   go() should accept symbols like :top, :left? (Top, Left) :center?
  -   rcprint also?
  - fix gets() color bug
  - Readline-like features in gets()?
  - document basic window scenarios: stdscr only, stdscr + nonoverlapping windows, menu/selector, ...
  - word wrapping (per output? per window?)
  - selective "toplevel import" feature
  - Scroll buffers
  - Slide: Attrs
  - Slide: getch
  - Slide: spinner
  - CDK?
  - Forms and fields

x - better putch 
x -   with an attr list
x -   with row/col
x - add gets() into RubyText
x - Effects improvements
x -   remove dependence on "win" parameter
x -   something like fx("some str", :bold, Red)...? (singleton?)
x - fix menu/selector (colors/highlighting)
x - play with fviewer again
x - bold/reverse/etc. are broken
x - move colors into effects
x - toplevel changes (puts etc.) only after #start?
x - is scroll(n) broken?
x - refactor puts/print/scrolling
x - Color object??
x - refactor color management
x - first-class "color pairs"
x - Scrolling
x - Add (some) automated tests
x - set method for flags (with block)
x - Attrs (effects?) and puts/print
x - save/restore all flags
x - border as keyword arg
x - Simple color names (constants)
x - Primitive screen dump
x - Split up source?
x - Kernel import a la carte?
x - move cursor: up, down, left, right, top, bottom, home
x - Slide: rcprint
